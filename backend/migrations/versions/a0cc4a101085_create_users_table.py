"""Create Users Table.

Revision ID: a0cc4a101085
Revises: de09ea700177
Create Date: 2024-07-07 15:33:48.732406

"""  # noqa: INP001

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a0cc4a101085"
down_revision = "de09ea700177"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("user_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(length=32), nullable=False),
        sa.Column("email", sa.TEXT(), nullable=False),
        sa.Column("hashed_password", sa.TEXT(), nullable=False),
        sa.Column("bio", sa.VARCHAR(length=256), nullable=True),
        sa.Column("avatar_id", sa.Integer(), nullable=True),
        sa.Column("banner_id", sa.Integer(), nullable=True),
        sa.Column("is_nsfw", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("post_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("post_karma", sa.Integer(), server_default="0", nullable=False),
        sa.Column("comment_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("comment_karma", sa.Integer(), server_default="0", nullable=False),
        sa.Column("last_seen", postgresql.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("created_on", postgresql.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_on", postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.CheckConstraint("email ~* '^[\\w\\.-]+@([\\w-]+\\.)+[\\w-]{2,6}$'"),
        sa.CheckConstraint("name ~* '^\\w{3,16}$'"),
        sa.ForeignKeyConstraint(["avatar_id"], ["media.media_id"], onupdate="cascade", ondelete="set null"),
        sa.ForeignKeyConstraint(["banner_id"], ["media.media_id"], onupdate="cascade", ondelete="set null"),
        sa.PrimaryKeyConstraint("user_id"),
    )
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_users_email"), ["email"], unique=True)
        batch_op.create_index(batch_op.f("ix_users_name"), ["name"], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_users_name"))
        batch_op.drop_index(batch_op.f("ix_users_email"))

    op.drop_table("users")
    # ### end Alembic commands ###
