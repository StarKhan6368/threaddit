"""Create Comments Table.

Revision ID: b52c9afabf50
Revises: a0540ec70f21
Create Date: 2024-07-07 18:05:04.743764

"""  # noqa: INP001

import sqlalchemy as sa
import sqlalchemy_searchable
import sqlalchemy_utils
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "b52c9afabf50"
down_revision = "a0540ec70f21"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comments",
        sa.Column("comment_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("creator_id", sa.Integer(), nullable=False),
        sa.Column("thread_id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("content", sa.TEXT(), nullable=True),
        sa.Column("media_id", sa.Integer(), nullable=True),
        sa.Column("upvote_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("downvote_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("replies_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("save_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("report_count", sa.Integer(), server_default="0", nullable=False),
        sa.Column("depth", sa.Integer(), server_default="0", nullable=False),
        sa.Column("is_nsfw", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("is_spoiler", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("is_sticky", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("is_deleted", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("is_removed", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("is_locked", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("created_on", postgresql.TIMESTAMP(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_on", postgresql.TIMESTAMP(timezone=True), nullable=True),
        sa.Column("search_vector", sqlalchemy_utils.types.ts_vector.TSVectorType(), nullable=False),
        sa.CheckConstraint("content ~* '[^\\s]+'"),
        sa.CheckConstraint("num_nonnulls(content, media_id) >= 1"),
        sa.ForeignKeyConstraint(["creator_id"], ["users.user_id"], onupdate="cascade", ondelete="restrict"),
        sa.ForeignKeyConstraint(["media_id"], ["media.media_id"], onupdate="cascade", ondelete="set null"),
        sa.ForeignKeyConstraint(["parent_id"], ["comments.comment_id"], onupdate="cascade", ondelete="restrict"),
        sa.ForeignKeyConstraint(["post_id"], ["posts.post_id"], onupdate="cascade", ondelete="restrict"),
        sa.ForeignKeyConstraint(["thread_id"], ["threads.thread_id"], onupdate="cascade", ondelete="restrict"),
        sa.PrimaryKeyConstraint("comment_id"),
    )
    with op.batch_alter_table("comments", schema=None) as batch_op:
        batch_op.create_index("ix_comments_search_vector", ["search_vector"], unique=False, postgresql_using="gin")
        batch_op.create_index(batch_op.f("ix_comments_thread_id"), ["thread_id", "post_id", "comment_id"], unique=True)

    sqlalchemy_searchable.sync_trigger(op.get_bind(), "comments", "search_vector", ["content"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    sqlalchemy_searchable.drop_trigger(op.get_bind(), "comments", "search_vector")

    with op.batch_alter_table("comments", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_comments_thread_id"))
        batch_op.drop_index("ix_comments_search_vector", postgresql_using="gin")

    op.drop_table("comments")
    # ### end Alembic commands ###
